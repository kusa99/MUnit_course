<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="4.munit-assert-test-suite.xml" />
	<munit:test name="payloadJSONExpectedSuccessTestCase" doc:id="86f8e8c3-3692-4074-9f59-039cd49bae2c" description="Test">
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getJSONObject" doc:id="34356a86-4c04-4d6e-85f7-fde123ec78e1" name="getJSONObject"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that - Payload is Expected" doc:id="fdedc07a-5637-4b28-9194-0a0ae28525e4" message='#["The response payload is incorrect"]' expression="#[%dw 2.0&#10;&#10;output application/json&#10;---]" is="#[MunitTools::equalTo(readUrl('classpath://payloadResponse.json', &quot;application/json&quot;))]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="categoryMatchSuccessTestCase" doc:id="df89e104-4313-4588-80cc-244f91240401" >
		<munit:behavior >
			<set-variable value="#[['obstetric', 'breast pain', 'dermatology', 'gynaecology'] as Array]" doc:name="Set Variable - medical Categories" doc:id="befd09f5-16eb-40bb-9975-bf99720401b5" variableName="medicalCategories"/>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getJSONObject" doc:id="5407b980-305a-4b79-b68c-a9a576a0bfdd" name="getJSONObject"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression - " doc:id="cc2e0b71-a5e5-4274-a99c-94548ec0f9ef" message='#["The medical category in the payload does not exist"]'>
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload.category must beOneOf(vars.medicalCategories)]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="freeValueSuccessTestCase" doc:id="6f627805-a77f-4194-b740-c7aaa852ce46" >
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getJSONObject" doc:id="e5f14e67-6c61-4b98-ac2c-adad3b2358c4" name="getJSONObject" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that - fee exists and is greater than or equal to 100" doc:id="a161f3f5-68d2-4198-a821-aa9fe375eeb6" message='#["The medical fee is not valid"]' expression="#[payload.fee]" is="#[MunitTools::both(MunitTools::notNullValue(), MunitTools::greaterThanOrEqualTo(100))]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="payloadMediaTypeSuccessTestCase" doc:id="326be7ab-7f9d-4f04-9ef8-b172d6916b76" >
		<munit:execution>
			<flow-ref doc:name="Flow-ref to getJSONObject" doc:id="9fd64559-aecf-4976-a771-44752b1bd13e" name="getJSONObject" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that - payload media type is JSON" doc:id="dbb73b4f-1a40-456d-97f9-590005049232" message='#["The media type of the response payload is incorrect"]' expression="#[payload]" is="#[MunitTools::withMediaType('application/json')]"/>
		</munit:validation>
	</munit:test>


</mule>
