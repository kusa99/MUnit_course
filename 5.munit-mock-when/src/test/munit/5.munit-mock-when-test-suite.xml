<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="5.munit-mock-when-test-suite.xml" />
	<munit:test name="animalsGETRequestSuccessTestCase" doc:id="19e25ac1-9f97-4afa-9f0d-66a1e235c268" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - HTTP GET Request" doc:id="118e571f-784a-41c3-b785-dd5065d2a8fb" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"animals": [&#10;		"animal": "cow",&#10;		"animal": "sheep"&#10;	]&#10;	&#10;}]' mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAnimals" doc:id="45a72ef4-fc65-44e0-8e79-f90e8829b30a" name="getAnimals"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Log VALIDATION PAYLOAD" doc:id="6d99d039-a48e-439c-9845-b364228c14f0" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"Log VALIDATION PAYLOAD": payload&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="setPetNameSuccessTestCase" doc:id="36566378-a0a8-4fa2-a4d1-6709cc32c40e" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as Zeus" doc:id="4b23abdc-aa99-47bf-b4a5-03ed5a8fe1ba" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value='#["ZEUS"]' />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="7ae25b16-95bd-4259-be42-ae74f386502c" name="getPetName"/>
		</munit:execution>
		<munit:validation>
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="f9e756a6-a171-44e0-b33a-39addaaf7b4b" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_variable_validation_scope": vars.myPetName&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="resetPetNameAfterNullSuccessTestCase" doc:id="b49fa6a2-fa7c-4157-b86f-92d6c90fc6cb" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as Null" doc:id="33b88d67-e754-409a-90c9-018fe822d883" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value="#[null]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="84d1ce58-1d74-42f2-98f3-57e1dcdd1bca" name="getPetName" />
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="37d66f32-ead6-4343-bc8f-ea585910f2bd" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_variable_validation_scope": vars.myPetName&#10;}]' />
		</munit:validation>
	</munit:test>
	<munit:test name="getFruitsSuccessTestCase" doc:id="cf6cfedf-8f68-45e0-bd82-d74a75adcb23" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - Flow Reference - getFruitsName" doc:id="26563e9b-7a44-4142-ae4a-51ac56e9b636" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="generateFruitsName" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[["banana", "orange", "apple"]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getFruitsName" doc:id="fb10b12f-ae19-4ed9-aa30-cbd0b026eed0" name="getFruitsName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION PAYLOAD" doc:id="da2acb36-0a0e-43a6-b70c-a6eeba458261" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_payload_validation_scope": payload&#10;}]' />
		</munit:validation>
	</munit:test>


</mule>
